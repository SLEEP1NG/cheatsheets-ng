webpackJsonp([32491225289800],{722:function(e,t){e.exports={data:{markdownRemark:{htmlAst:{type:"element",tagName:"div",properties:{},children:[{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-actions"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Create action creators in flux standard action format."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"increment = createAction('INCREMENT', amount => amount)\nincrement = createAction('INCREMENT')  // same\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"increment(42) === { type: 'INCREMENT', payload: 42 }\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"// Errors are handled for you:\nerr = new Error()\nincrement(err) === { type: 'INCREMENT', payload: err, error: true }\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.npmjs.com/package/redux-actions"},children:[{type:"text",value:"redux-actions"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"flux-standard-action"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"A standard for flux action objects. An action may have an "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"error"}]},{type:"text",value:", "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"payload"}]},{type:"text",value:" and "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"meta"}]},{type:"text",value:" and nothing else."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"{ type: 'ADD_TODO', payload: { text: 'Work it' } }\n{ type: 'ADD_TODO', payload: new Error(), error: true }\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://github.com/acdlite/flux-standard-action"},children:[{type:"text",value:"flux-standard-action"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-multi"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Dispatch multiple actions in one action creator."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"store.dispatch([\n  { type: 'INCREMENT', payload: 2 },\n  { type: 'INCREMENT', payload: 3 }\n])\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://github.com/ashaffer/redux-multi"},children:[{type:"text",value:"redux-multi"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"reduce-reducers"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Combines reducers (like "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"combineReducers()"}]},{type:"text",value:"), but without namespacing magic."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"re = reduceReducers(\n  (state, action) => state + action.number,\n  (state, action) => state + action.number\n)\n\nre(10, { number: 2 })  //=> 14\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.npmjs.com/package/reduce-reducers"},children:[{type:"text",value:"reduce-reducers"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-logger"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Logs actions to your console."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"// Nothing to see here\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://github.com/evgenyrodionov/redux-logger"},children:[{type:"text",value:"redux-logger"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Async"}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-promise"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Pass promises to actions. Dispatches a flux-standard-action."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"increment = createAction('INCREMENT')  // redux-actions\nincrement(Promise.resolve(42))\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://github.com/acdlite/redux-promise"},children:[{type:"text",value:"redux-promise"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-promises"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Sorta like that, too. Works by letting you pass "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"thunks"}]},{type:"text",value:" (functions) to "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"dispatch()"}]},{type:"text",value:". Also has 'idle checking'."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"fetchData = (url) => (dispatch) => {\n  dispatch({ type: 'FETCH_REQUEST' })\n  fetch(url)\n    .then((data) => dispatch({ type: 'FETCH_DONE', data })\n    .catch((error) => dispatch({ type: 'FETCH_ERROR', error })\n})\n\nstore.dispatch(fetchData('/posts'))\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"// That's actually shorthand for:\nfetchData('/posts')(store.dispatch)\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.npmjs.com/package/redux-promises"},children:[{type:"text",value:"redux-promises"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-effects"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Pass side effects declaratively to keep your actions pure."}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"{\n  type: 'EFFECT_COMPOSE',\n  payload: {\n    type: 'FETCH'\n    payload: {url: '/some/thing', method: 'GET'}\n  },\n  meta: {\n    steps: [ [success, failure] ]\n  }\n}\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.npmjs.com/package/redux-effects"},children:[{type:"text",value:"redux-effects"}]}]},{type:"comment",value:" {.-crosslink} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"redux-thunk"}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:'Pass "thunks" to as actions. Extremely similar to redux-promises, but has support for getState.'}]},{type:"comment",value:" {.-setup} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"fetchData = (url) => (dispatch, getState) => {\n  dispatch({ type: 'FETCH_REQUEST' })\n  fetch(url)\n    .then((data) => dispatch({ type: 'FETCH_DONE', data })\n    .catch((error) => dispatch({ type: 'FETCH_ERROR', error })\n})\n\nstore.dispatch(fetchData('/posts'))\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"// That's actually shorthand for:\nfetchData('/posts')(store.dispatch, store.getState)\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-js"]},children:[{type:"text",value:"// Optional: since fetchData returns a promise, it can be chained\n// for server-side rendering\nstore.dispatch(fetchPosts()).then(() => {\n  ReactDOMServer.renderToString(<MyApp store={store} />)\n})\n"}]}]},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"https://www.npmjs.com/package/redux-thunk"},children:[{type:"text",value:"redux-thunk"}]}]},{type:"comment",value:" {.-crosslink} "}]},frontmatter:{title:"Awesome Redux",category:"React",intro:null}},relatedPages:{edges:[{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /redux",context:{nodePath:"/redux",category:"React",title:"Redux"}}},{node:{id:"SitePage /enzyme",context:{nodePath:"/enzyme",category:"React",title:"Enzyme"}}},{node:{id:"SitePage /enzyme@2",context:{nodePath:"/enzyme@2",category:"React",title:"Enzyme v2"}}},{node:{id:"SitePage /flux",context:{nodePath:"/flux",category:"React",title:"Flux architecture"}}},{node:{id:"SitePage /react-router",context:{nodePath:"/react-router",category:"React",title:"React-router"}}}]},topPages:{edges:[{node:{id:"SitePage /elixir",context:{nodePath:"/elixir",category:"Elixir",title:"Elixir"}}},{node:{id:"SitePage /es6",context:{nodePath:"/es6",category:"JavaScript",title:"ES2015+"}}},{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /vim",context:{nodePath:"/vim",category:"Vim",title:"Vim"}}},{node:{id:"SitePage /vimscript",context:{nodePath:"/vimscript",category:"Vim",title:"Vim scripting"}}},{node:{id:"SitePage /capybara",context:{nodePath:"/capybara",category:"Ruby libraries",title:"Capybara"}}}]},allPages:{totalCount:364}},pathContext:{node_id:"/home/rsc/Dev/@devhints/cheatsheets-ng/sheets/awesome-redux.md absPath of file >>> MarkdownRemark",nodePath:"/awesome-redux",nodeType:"sheet",title:"Awesome Redux",category:"React",weight:0}}}});
//# sourceMappingURL=path---awesome-redux-c1f9e91477d3536f196b.js.map