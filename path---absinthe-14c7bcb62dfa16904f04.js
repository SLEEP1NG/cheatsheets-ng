webpackJsonp([0x634cafe415fb],{710:function(e,t){e.exports={data:{markdownRemark:{htmlAst:{type:"element",tagName:"div",properties:{},children:[{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Introduction"}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Concepts"}]},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"Schema"}]},{type:"text",value:" - The root. Defines what queries you can do, and what types they return."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"Resolver"}]},{type:"text",value:" - Functions that return data."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"Type"}]},{type:"text",value:" - A type definition describing the shape of the data you'll return."}]},{type:"text",value:"\n"}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Plug"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/router.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:'defmodule Blog.Web.Router do\n  use Phoenix.Router\n\n  forward "/", Absinthe.Plug,\n    schema: Blog.Schema\nend\n'}]}]},{type:"comment",value:' {data-line="4,5"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Absinthe is a Plug, and you pass it one "},{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Schema"}]},{type:"text",value:"."}]},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"See: "},{type:"element",tagName:"a",properties:{href:"http://absinthe-graphql.org/tutorial/our-first-query/"},children:[{type:"text",value:"Our first query"}]}]},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Main concepts"}]},{type:"comment",value:" {.-three-column} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Schema"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/schema.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:'defmodule Blog.Schema do\n  use Absinthe.Schema\n  import_types Blog.Schema.Types\n\n  query do\n    @desc "Get a list of blog posts"\n    field :posts, list_of(:post) do\n      resolve &Blog.PostResolver.all/2\n    end\n  end\nend\n'}]}]},{type:"comment",value:' {data-line="5,6,7,8,9,10"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This schema will account for "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"{ posts { ··· } }"}]},{type:"text",value:". It returns a "},{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Type"}]},{type:"text",value:" of "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:":post"}]},{type:"text",value:", and delegates to a "},{type:"element",tagName:"strong",properties:{},children:[{type:"text",value:"Resolver"}]},{type:"text",value:"."}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Resolver"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/resolvers/post_resolver.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:"defmodule Blog.PostResolver do\n  def all(_args, _info) do\n    {:ok, Blog.Repo.all(Blog.Post)}\n  end\nend\n"}]}]},{type:"comment",value:' {data-line="3"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This is the function that the schema delegated the "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"posts"}]},{type:"text",value:" query to."}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Type"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/schema/types.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:'defmodule Blog.Schema.Types do\n  use Absinthe.Schema.Notation\n\n  @desc "A blog post"\n  object :post do\n    field :id, :id\n    field :title, :string\n    field :body, :string\n  end\nend\n'}]}]},{type:"comment",value:' {data-line="4,5,6,7,8,9"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This defines a type "},{type:"element",tagName:"code",properties:{},children:[{type:"text",value:":post"}]},{type:"text",value:", which is used by the resolver."}]},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Schema"}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Query arguments"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"GraphQL query"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'{ user(id: "1") { ··· } }\n'}]}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/schema.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:"query do\n  field :user, type: :user do\n    arg :id, non_null(:id)\n    resolve &Blog.UserResolver.find/2\n  end\nend\n"}]}]},{type:"comment",value:' {data-line="3"} '},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"Resolver"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:"def find(%{id: id} = args, _info) do\n  ···\nend\n"}]}]},{type:"comment",value:' {data-line="1"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"See: "},{type:"element",tagName:"a",properties:{href:"http://absinthe-graphql.org/tutorial/query-arguments/"},children:[{type:"text",value:"Query arguments"}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Mutations"}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"GraphQL query"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'{\n  mutation CreatePost {\n    post(title: "Hello") { id }\n  }\n}\n'}]}]},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"web/schema.ex"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-elixir"]},children:[{type:"text",value:'mutation do\n  @desc "Create a post"\n  field :post, type: :post do\n    arg :title, non_null(:string)\n    resolve &Blog.PostResolver.create/2\n  end\nend\n'}]}]},{type:"comment",value:' {data-line="1"} '},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"See: "},{type:"element",tagName:"a",properties:{href:"http://absinthe-graphql.org/tutorial/mutations/"},children:[{type:"text",value:"Mutations"}]}]},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"References"}]},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"http://absinthe-graphql.org/"},children:[{type:"text",value:"Absinthe website"}]},{type:"text",value:" "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"(absinthe-graphql.org)"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"element",tagName:"a",properties:{href:"./graphql"},children:[{type:"text",value:"GraphQL cheatsheet"}]},{type:"text",value:" "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"(devhints.io)"}]}]},{type:"text",value:"\n"}]}]},frontmatter:{title:"Absinthe",category:"Hidden",intro:"[Absinthe](http://absinthe-graphql.org/) allows you to write GraphQL servers in Elixir.\n"}},relatedPages:{edges:[{node:{id:"SitePage /brew",context:{nodePath:"/brew",category:"Hidden",title:"Homebrew"}}},{node:{id:"SitePage /commander-js",context:{nodePath:"/commander-js",category:"Hidden",title:"Commander.js"}}},{node:{id:"SitePage /css-animation",context:{nodePath:"/css-animation",category:"Hidden",title:"CSS animations"}}},{node:{id:"SitePage /css-background",context:{nodePath:"/css-background",category:"Hidden",title:"CSS background"}}},{node:{id:"SitePage /css-font",context:{nodePath:"/css-font",category:"Hidden",title:"CSS font"}}},{node:{id:"SitePage /css-selectors",context:{nodePath:"/css-selectors",category:"Hidden",title:"CSS selectors"}}}]},topPages:{edges:[{node:{id:"SitePage /elixir",context:{nodePath:"/elixir",category:"Elixir",title:"Elixir"}}},{node:{id:"SitePage /es6",context:{nodePath:"/es6",category:"JavaScript",title:"ES2015+"}}},{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /vim",context:{nodePath:"/vim",category:"Vim",title:"Vim"}}},{node:{id:"SitePage /vimscript",context:{nodePath:"/vimscript",category:"Vim",title:"Vim scripting"}}},{node:{id:"SitePage /capybara",context:{nodePath:"/capybara",category:"Ruby libraries",title:"Capybara"}}}]},allPages:{totalCount:365}},pathContext:{node_id:"/home/rsc/Dev/@devhints/cheatsheets-ng/sheets/absinthe.md absPath of file >>> MarkdownRemark",nodePath:"/absinthe",nodeType:"sheet",title:"Absinthe",category:"Hidden",weight:0,updated:"2017-10-10T00:00:00.000Z"}}}});
//# sourceMappingURL=path---absinthe-14c7bcb62dfa16904f04.js.map