webpackJsonp([0x61fb37bdc260],{769:function(e,t){e.exports={data:{markdownRemark:{htmlAst:{type:"element",tagName:"div",properties:{},children:[{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Basic example"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:"# docker-compose.yml\nversion: '2'\n\nservices:\n  web:\n    build: .\n    # build from Dockerfile\n    context: ./Path\n    dockerfile: Dockerfile\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: redis\n"}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Commands"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"docker-compose start\ndocker-compose stop\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"docker-compose pause\ndocker-compose unpause\n"}]}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-sh"]},children:[{type:"text",value:"docker-compose ps\ndocker-compose up\ndocker-compose down\n"}]}]},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Reference"}]},{type:"comment",value:" {.-one-column} "},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:'web:\n  # build from Dockerfile\n  build: .\n\n  # build from image\n  image: ubuntu\n  image: ubuntu:14.04\n  image: tutum/influxdb\n  image: example-registry:4000/postgresql\n  image: a4bc65fd\n\n  ports:\n    - "3000"\n    - "8000:80"  # guest:host\n\n  # command to execute\n  command: bundle exec thin -p 3000\n  command: [bundle, exec, thin, -p, 3000]\n\n  # override the entrypoint\n  entrypoint: /app/start.sh\n  entrypoint: [php, -d, vendor/bin/phpunit]\n\n  # environment vars\n  environment:\n    RACK_ENV: development\n  environment:\n    - RACK_ENV=development\n\n  # environment vars from file\n  env_file: .env\n  env_file: [.env, .development.env]\n\n  # expose ports to linked services (not to host)\n  expose: ["3000"]\n\n  # make this service extend another\n  extends:\n    file: common.yml  # optional\n    service: webapp\n\n  # makes the `db` service available as the hostname `database`\n  # (implies depends_on)\n  links:\n    - db:database\n    - redis\n\n  # make sure `db` is alive before starting\n  depends_on:\n    - db\n\n  volumes:\n    - /var/lib/mysql\n    - ./_data:/var/lib/mysql\n'}]}]},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Advanced features"}]},{type:"comment",value:" {.-three-column} "},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Labels"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:'services:\n  web:\n    labels:\n      com.example.description: "Accounting web app"\n'}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"DNS servers"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:"services:\n  web:\n    dns: 8.8.8.8\n    dns:\n      - 8.8.8.8\n      - 8.8.4.4\n"}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Devices"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:'services:\n  web:\n    devices:\n    - "/dev/ttyUSB0:/dev/ttyUSB0"\n'}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"External links"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:"services:\n  web:\n    external_links:\n      - redis_1\n      - project_db_1:mysql\n"}]}]},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Hosts"}]},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{className:["language-yaml"]},children:[{type:"text",value:'services:\n  web:\n    extra_hosts:\n      - "somehost:192.168.1.100"\n'}]}]}]},frontmatter:{title:"docker-compose",category:"Devops",intro:null}},relatedPages:{edges:[{node:{id:"SitePage /awscli",context:{nodePath:"/awscli",category:"Devops",title:"AWS CLI"}}},{node:{id:"SitePage /chef",context:{nodePath:"/chef",category:"Devops",title:"Chef"}}},{node:{id:"SitePage /deis",context:{nodePath:"/deis",category:"Devops",title:"Deis"}}},{node:{id:"SitePage /docker",context:{nodePath:"/docker",category:"Devops",title:"Docker CLI"}}},{node:{id:"SitePage /dockerfile",context:{nodePath:"/dockerfile",category:"Devops",title:"Dockerfile"}}},{node:{id:"SitePage /ec2",context:{nodePath:"/ec2",category:"Devops",title:"EC2 API tools"}}}]},topPages:{edges:[{node:{id:"SitePage /elixir",context:{nodePath:"/elixir",category:"Elixir",title:"Elixir"}}},{node:{id:"SitePage /es6",context:{nodePath:"/es6",category:"JavaScript",title:"ES2015+"}}},{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /vim",context:{nodePath:"/vim",category:"Vim",title:"Vim"}}},{node:{id:"SitePage /vimscript",context:{nodePath:"/vimscript",category:"Vim",title:"Vim scripting"}}},{node:{id:"SitePage /capybara",context:{nodePath:"/capybara",category:"Ruby libraries",title:"Capybara"}}}]},allPages:{totalCount:364}},pathContext:{node_id:"/home/rsc/Dev/@devhints/cheatsheets-ng/sheets/docker-compose.md absPath of file >>> MarkdownRemark",nodePath:"/docker-compose",nodeType:"sheet",title:"docker-compose",category:"Devops",weight:-1,updated:"2018-03-17T00:00:00.000Z"}}}});
//# sourceMappingURL=path---docker-compose-8400a2728640627ecfbb.js.map