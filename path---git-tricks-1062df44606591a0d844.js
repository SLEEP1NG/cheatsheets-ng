webpackJsonp([21457359818420],{819:function(e,t){e.exports={data:{markdownRemark:{htmlAst:{type:"root",children:[{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Refs"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"HEAD^       # 1 commit before head\nHEAD^^      # 2 commits before head\nHEAD~5      # 5 commits before head\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Branches"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"# create a new branch\n  git checkout -b $branchname\n  git push origin $branchname --set-upstream\n\n# get a remote branch\n  git fetch origin\n  git checkout --track origin/$branchname\n\n# delete local remote-tracking branches (lol)\n  git remote prune origin\n\n# list merged branches\n  git branch -a --merged\n\n# delete remote branch\n  git push origin :$branchname\n  \n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Collaboration"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"# Rebase your changes on top of the remote master\n  git pull --rebase upstream master\n  \n# Squash multiple commits into one for a cleaner git log\n# (on the following screen change the word pick to either 'f' or 's')\n  git rebase -i $commit_ref\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Submodules"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"# Import .gitmodules\n  git submodule init\n\n# Clone missing submodules, and checkout commits\n  git submodule update --init --recursive\n\n# Update remote URLs in .gitmodules\n# (Use when you changed remotes in submodules)\n  git submodule sync\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Diff"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Diff with stats"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"git diff --stat\napp/a.txt    | 2 +-\napp/b.txt    | 8 ++----\n2 files changed, 10 insertions(+), 84 deletions(-)\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Just filenames"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"git diff --summary\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Log options"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'--oneline\n  e11e9f9 Commit message here\n\n--decorate\n  shows "(origin/master)"\n\n--graph\n  shows graph lines\n\n--date=relative\n  "2 hours ago"\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Misc"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Cherry pick"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"git rebase 76acada^\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Misc"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'# get current sha1 (?)\n  git show-ref HEAD -s\n\n# show single commit info\n  git log -1 f5a960b5\n\n# Go back up to root directory\n  cd "$(git rev-parse --show-top-level)"\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Short log"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:" $ git shortlog\n $ git shortlog HEAD~20..    # last 20 commits\n\n James Dean (1):\n     Commit here\n     Commit there\n\n Frank Sinatra (5):\n     Another commit\n     This other commit\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Bisect"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"git bisect start HEAD HEAD~6\ngit bisect run npm test\ngit checkout refs/bisect/bad   # this is where it screwed up\ngit bisect reset\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Manual bisection"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"git bisect start\ngit bisect good   # current version is good\n\ngit checkout HEAD~8\nnpm test          # see if it's good\ngit bisect bad    # current version is bad\n\ngit bisect reset  # abort\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Searching"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'git log --grep="fixes things"  # search in commit messages\ngit log -S"window.alert"       # search in code\ngit log -G"foo.*"              # search in code (regex)\n'}]}]}],data:{quirksMode:!1}},frontmatter:{title:"Git tricks",category:"Git",intro:null}},relatedPages:{edges:[{node:{id:"SitePage /tig",context:{nodePath:"/tig",category:"Git",title:"Tig"}}},{node:{id:"SitePage /git-log-format",context:{nodePath:"/git-log-format",category:"Git",title:"Git log format string"}}},{node:{id:"SitePage /git-branch",context:{nodePath:"/git-branch",category:"Git",title:"Git branches"}}},{node:{id:"SitePage /git-extras",context:{nodePath:"/git-extras",category:"Git",title:"Git extras"}}},{node:{id:"SitePage /git-log",context:{nodePath:"/git-log",category:"Git",title:"git log"}}},{node:{id:"SitePage /git-revisions",context:{nodePath:"/git-revisions",category:"Git",title:"Git revisions"}}}]},topPages:{edges:[{node:{id:"SitePage /elixir",context:{nodePath:"/elixir",category:"Elixir",title:"Elixir"}}},{node:{id:"SitePage /es6",context:{nodePath:"/es6",category:"JavaScript",title:"ES2015+"}}},{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /vim",context:{nodePath:"/vim",category:"Vim",title:"Vim"}}},{node:{id:"SitePage /vimscript",context:{nodePath:"/vimscript",category:"Vim",title:"Vim scripting"}}},{node:{id:"SitePage /capybara",context:{nodePath:"/capybara",category:"Ruby libraries",title:"Capybara"}}}]},allPages:{totalCount:364}},pathContext:{node_id:"/home/rsc/Dev/@devhints/cheatsheets-ng/sheets/git-tricks.md absPath of file >>> MarkdownRemark",nodePath:"/git-tricks",nodeType:"sheet",title:"Git tricks",category:"Git",weight:0,updated:null}}}});
//# sourceMappingURL=path---git-tricks-1062df44606591a0d844.js.map