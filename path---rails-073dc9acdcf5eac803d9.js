webpackJsonp([1860720453086],{969:function(e,t){e.exports={data:{markdownRemark:{htmlAst:{type:"root",children:[{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Helpers"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'class ApplicationController\n  helper_method :logged_in?\n\n  def logged_in?\n    "Something"\n  end\nend\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"CSS/JS packages"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"stylesheet_link_tag :monkey\njavascript_link_tag :monkey\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Forms"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'# http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html\n\n- form_for @person do |f|\n  = f.label :first_name\n  = f.label :first_name, "First name"\n  = f.text_field :first_name\n\n  = f.label :last_name>\n  = f.text_field :last_name>\n\n  - fields_for @person.permission do |fields|\n    = fields.checkbox :admin\n\n  -# name="person[admin]"\n  - fields_for :person, @client do |fields|\n    = fields.checkbox :admin\n\n  = f.submit\n\n# Also: check_box, email_field, fields_for\n# file_field, hidden_field, label, number_field, password_field\n# radio_button, range_field, search_field, telephonen_field,\n# text_area, text_field, url_field\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Controllers"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"a",properties:{href:"http://apidock.com/rails/ActionController/Base"},children:[{type:"text",value:"http://apidock.com/rails/ActionController/Base"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"class ProjectsController\n  layout 'project'   # Actually defaults to `projects` based\n                     # on the controller name\n\n  def save\n  end\n\n  def edit\n  end\nend\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Before filter"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'class ApplicationController < ActionController::Base\n  before_filter :validate, only: [:save, :edit]\n  before_filter :ensure_auth, except: [:logout]\n\n  before_filter :require_login\n \n  private\n \n  def require_login\n    unless logged_in?\n      flash[:error] = "You must be logged in to access this section"\n      redirect_to new_login_url # halts request cycle\n    end\n  end\nend\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Default URL optinos"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"class ApplicationController < ActionController::Base\n  # The options parameter is the hash passed in to 'url_for'\n  def default_url_options(options)\n    {:locale => I18n.locale}\n  end\nend\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Hashes"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:'session[:what]\nflash[:notice] = "Your session expired"\nparams[:id]\n'}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"XML and JSON"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"class UsersController < ApplicationController\n  def index\n    @users = User.all\n    respond_to do |format|\n      format.html # index.html.erb\n      format.xml  { render :xml => @users}\n      format.json { render :json => @users}\n    end\n  end\nend\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Redirection"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"redirect_to action: 'show', id: @entry.id\nredirect_to root_url          # a path\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Render"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"render nothing: true\nrender template: 'products/show'\nrender status: 500\nrender status: :forbidden\nrender text: '...'\nrender layout: 'special_layout'\nrender layout: false\nrender action: 'something'    # same as `file: 'my/something'`\n                              # Renders the template only, does not execute\n                              # the action\n\nrender json: object\nrender xml: object\n\nrender location: photo_url(photo)\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"Head-only responses"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"head :bad_request\nhead :created, location: photo_path(@photo)\n"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Layouts"}]},{type:"text",value:"\n"},{type:"element",tagName:"pre",properties:{},children:[{type:"element",tagName:"code",properties:{},children:[{type:"text",value:"# app/views/layouts/application.html.erb\n<%= content_for?(:content) ? yield :content : yield %>\n\n# app/views/layouts/news.html.erb\n<% content_for :content do %>\n   ...\n<% end %>\n<% render template: :'layouts/application' %>\n"}]}]}],data:{quirksMode:!1}},frontmatter:{title:"Rails",category:"Rails",intro:null}},relatedPages:{edges:[{node:{id:"SitePage /arel",context:{nodePath:"/arel",category:"Rails",title:"Arel"}}},{node:{id:"SitePage /rails-controllers",context:{nodePath:"/rails-controllers",category:"Rails",title:"Controllers"}}},{node:{id:"SitePage /rails-features",context:{nodePath:"/rails-features",category:"Rails",title:"Rails features"}}},{node:{id:"SitePage /rails-forms",context:{nodePath:"/rails-forms",category:"Rails",title:"Form helpers"}}},{node:{id:"SitePage /rails-gems",context:{nodePath:"/rails-gems",category:"Rails",title:"Rails gems"}}},{node:{id:"SitePage /rails-helpers",context:{nodePath:"/rails-helpers",category:"Rails",title:"Helpers"}}}]},topPages:{edges:[{node:{id:"SitePage /elixir",context:{nodePath:"/elixir",category:"Elixir",title:"Elixir"}}},{node:{id:"SitePage /es6",context:{nodePath:"/es6",category:"JavaScript",title:"ES2015+"}}},{node:{id:"SitePage /react",context:{nodePath:"/react",category:"React",title:"React.js"}}},{node:{id:"SitePage /vimscript",context:{nodePath:"/vimscript",category:"Vim",title:"Vim scripting"}}},{node:{id:"SitePage /vim",context:{nodePath:"/vim",category:"Vim",title:"Vim"}}},{node:{id:"SitePage /capybara",context:{nodePath:"/capybara",category:"Ruby libraries",title:"Capybara"}}}]},allPages:{totalCount:363}},pathContext:{node_id:"/home/rsc/Dev/@devhints/cheatsheets-ng/sheets/rails.md absPath of file >>> MarkdownRemark",nodePath:"/rails",nodeType:"sheet",title:"Rails",category:"Rails",weight:0,updated:null}}}});
//# sourceMappingURL=path---rails-073dc9acdcf5eac803d9.js.map